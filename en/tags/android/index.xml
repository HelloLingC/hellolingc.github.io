<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Android on MoonLab</title><link>https://moonlab.top/en/tags/android/</link><description>Recent content in Android on MoonLab</description><generator>Hugo -- 0.143.1</generator><language>en-US</language><lastBuildDate>Wed, 14 Aug 2019 11:07:50 +0000</lastBuildDate><atom:link href="https://moonlab.top/en/tags/android/index.xml" rel="self" type="application/rss+xml"/><item><title>Android Notes 1 - Analysis of the View Event Distribution Mechanism</title><link>https://moonlab.top/en/posts/2019/android-view-motionevent/</link><pubDate>Wed, 14 Aug 2019 11:07:50 +0000</pubDate><guid>https://moonlab.top/en/posts/2019/android-view-motionevent/</guid><description>&lt;h1 id="coo-coo-coo">Coo Coo Coo&lt;/h1>
&lt;p>Basically, this article summarizes the chapter on the View event distribution mechanism from the book &amp;ldquo;Exploring Android Art Development.&amp;rdquo;&lt;/p>
&lt;p>A long time ago, Android development notes were too superficial.&lt;/p>
&lt;h1 id="brief-introduction">Brief Introduction&lt;/h1>
&lt;p>As we all know, an event sequence starts with MotionEvent.ACTION_DOWN (press), followed by multiple MotionEvent.MOVE (move) events, and ends with a MotionEvent.ACTION_UP (release).&lt;/p>
&lt;p>The order of event transmission is: Activity -&amp;gt; Window -&amp;gt; DecorView -&amp;gt; RootView (the View you set).&lt;/p></description></item><item><title>The question of Zhihu Daily</title><link>https://moonlab.top/en/posts/2019/android-zhihu-daily/</link><pubDate>Thu, 04 Jul 2019 20:34:10 +0000</pubDate><guid>https://moonlab.top/en/posts/2019/android-zhihu-daily/</guid><description>The author started developing a third-party Zhihu Daily client during the summer vacation, using the MVP architecture. They encountered some issues, such as global exception handling and JSON parsing, and chose to use Picasso to load images. To solve the problem of images being too wide in the WebView, the author adjusted the image size through JavaScript. In the end, the author completed the basic loading and viewing functions and shared the code on GitHub. Despite the challenges in the development process, the author still enjoyed the experience.</description></item></channel></rss>